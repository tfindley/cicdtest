name: 'Test CICD Pipeline'

# **What it does**: Renders the content of every page and check all internal links.
# **Why we have it**: To make sure all links connect correctly.
# **Who does it impact**: Docs content.

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - '**-autopep8'

permissions:
  contents: read
  # Needed for the 'trilom/file-changes-action' action
  pull-requests: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build_venv:
    runs-on: ${{ fromJSON('["self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup python venv
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          if [ -f "requirements.txt" ]; then
            echo "requirements.txt exists."
            pip install -r requirements.txt
          else
            echo "requirements.txt does not exist."
          fi

      - name: Run pip safety Checkout
        run: |
          if [ -f "requirements.txt" ]; then
            pip install safety
            safety check
          else
            echo "requirements.txt does not exist. - no safety check required"
          fi

  linting:
    needs: build_venv
    runs-on: ${{ fromJSON('["self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: debug
        run: |
          env

      - name: Use python venv
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'


      - name: Lint all code using flake8
        run: |
          flake8 .

  fix_and_commit:
    needs: linting
    if: ${{ failure() }}
    runs-on: ${{ fromJSON('["self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_TOKEN }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Use python venv
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Fix content
        id: fix-content
        run: |
          autopep8 -aa -i -r .
          flake8 .

      - name: Recommit
        if: steps.fix-content.outcome == 'success'
        uses: EndBug/add-and-commit@v9
        with:
          author_name: AutoPep8
          commit: --signoff
          default_author: github_actor
          message: 'fix: Linting fixes'
          new_branch: ${{ github.ref_name }}-autopep8
          pathspec_error_handling: ignore
          pull: --rebase origin ${{ github.ref_name }} 
          push: --set-upstream origin ${{ github.ref_name }}-autopep8 --force

  test:
    needs: [linting]
    runs-on: ${{ fromJSON('["self-hosted"]')[github.repository == 'github/docs-internal'] }}

    steps:
    - name: Use python venv
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
  
    - name: Run Tests
      run: |
        python manage.py test

  deploy:
    needs: [test]
    if: contains('main', github.ref_name)
    runs-on: ${{ fromJSON('["self-hosted"]')[github.repository == 'github/docs-internal'] }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Generate deployment package
      run: zip -r deploy.zip . -x '*.git*'

    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: django-github-actions0-aws
        environment_name: Djangogithubactions0aws-env
        version_label: 12357
        region: "us-east-1"
        deployment_package: deploy.zip

  # cleanup:
  #   needs: linting
  #   if: always()
  #   runs-on: ${{ fromJSON('["self-hosted"]')[github.repository == 'github/docs-internal'] }}
  #   steps:
    
  #     - name: Destroy venv
  #       run: |
  #         if [ -d "../.venv" ]; then
  #           rm -rf ../.venv
  #         else
  #           echo "No venv detected"
  #         fi