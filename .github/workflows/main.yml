name: 'Test CICD Pipeline'

# **What it does**: Renders the content of every page and check all internal links.
# **Why we have it**: To make sure all links connect correctly.
# **Who does it impact**: Docs content.

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  # Needed for the 'trilom/file-changes-action' action
  pull-requests: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build_venv:
    runs-on: ${{ fromJSON('["self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
    
      - name: Add requirements to venv venv
        run: |
          if [ -d "../.venv" ]; then
            rm -rf ../.venv
          else
            echo "No venv detected"
          fi
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create python venv
        run: |
          python3 -m venv ../.venv
          . ../.venv/bin/activate
          pip install --upgrade pip

      - name: Add requirements to venv venv
        run: |
          . ../.venv/bin/activate
          FILE=requirements.txt
          if [ -f "$FILE" ]; then
            echo "$FILE exists."
            pip install -r requirements.txt
          else
            echo "$FILE does not exist."
          fi

  linting:
    runs-on: ${{ fromJSON('["self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      
      - name: debug
        run: |
          pwd
          ls -lah
          ls -lah ../
    
      - name: Activate venv
        run: . ../.venv/bin/activate

      - name: lint all code using flake8
        run: flake8 .
        
        
  cleanup:
    runs-on: ${{ fromJSON('["self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
    
      - name: Destroy venv
        run: |
          if [ -d "../.venv" ]; then
            rm -rf ../.venv
          else
            echo "No venv detected"
          fi
